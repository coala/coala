"""
Tests Globbing and related functions
Test Files are local and permanent and organized as follows:
GlobTestDir
├── SubDir1
│   ├── File11.py
│   └── File12.py
│ SubDir2
│   ├── File(with)parentheses.txt
│   └── File[with]brackets.txt
├── File1.x
├── File2.y
└── File3.z
"""
𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ڟ=range
𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﱧ=len
𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𩈺=list
𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ꦥ=sorted
𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﭐ=None
import inspect
𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ࡋ=inspect.currentframe
𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﲨ=inspect.getfile
import os
𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𪎾=os.curdir
𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃=os.path
𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﯕ=os.sep
import unittest
𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𡙂=unittest.TestCase
𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ᛇ=unittest.main
import sys
𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﺺ=sys.path
𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﺺ.insert(0,".")
from coalib.parsing.Globbing import _iter_alternatives
from coalib.parsing.Globbing import _iter_choices
from coalib.parsing.Globbing import _position_is_bracketed
from coalib.parsing.Globbing import fnmatch
from coalib.parsing.Globbing import glob
class 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂:
 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﱲ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.split(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﲨ(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ࡋ()))[0]
 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰣ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﱲ,'GlobTestDir')
 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﺬ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰣ,'SubDir1')
 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𦒂=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﺬ,'File11.py')
 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﱍ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﺬ,'File12.py')
 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𡑒=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰣ,'SubDir2')
 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𐩯=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𡑒,'File(with)parentheses.txt')
 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𐩰=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𡑒,'File[with]brackets.txt')
 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﺌ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰣ,'File1.x')
 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﺌ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰣ,'File2.y')
 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﻎ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰣ,'File3.z')
class 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﮬ(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𡙂):
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﴍ(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𠛊={"[]":[],"[a]":[1],"[][]":[1,2],"[]]]":[1],"[[[]":[1,2],"[[[][]]]":[1,2,5],"][":[],"][][":[],"[!]":[],"[!c]":[1,2],"[!":[]}
  for 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,bracketed_positions in 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𠛊.items():
   for 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﶭ in 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ڟ(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﱧ(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ)):
    if 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﶭ in bracketed_positions:
     𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.assertTrue(_position_is_bracketed(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﶭ))
    else:
     𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.assertFalse(_position_is_bracketed(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﶭ))
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗לּ(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗㞕={"":[""],"a":["a"],"a|b":["a","b"],"a|b|c":["a","b","c"],"a|b[|]c":["a","b[|]c"],"a|[b|c]":["a","[b|c]"],"a[|b|c]":["a[|b|c]"],"[a|b|c]":["[a|b|c]"],"[a]|[b]|[c]":["[a]","[b]","[c]"],"[[a]|[b]|[c]":["[[a]","[b]","[c]"]}
  for 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,choices in 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗㞕.items():
   𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.assertEqual(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𩈺(_iter_choices(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ)),choices)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ޢ(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﺴ={"":[""],"(ab)":["ab"],"a|b":["a|b"],"()":[""],"(|)":[""],"(a|b)":["a","b"],"(a|b|c)":["a","b","c"],"a(b|c)":["ab","ac"],"(a|b)(c|d)":["ac","ad","bc","bd"],"(a|b(c|d)":["(a|bc","(a|bd"],"(a[|]b)":["a[|]b"],"[(]a|b)":["[(]a|b)"],}
  for 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,alternatives in 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﺴ.items():
   𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.assertEqual(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ꦥ(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𩈺(_iter_alternatives(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ))),𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ꦥ(alternatives))
class 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﶒ(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𡙂):
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𢌶(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤):
  for 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𠈝 in 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷:
   𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.assertTrue(fnmatch(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𠈝,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ))
  for 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗螝 in 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤:
   𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.assertFalse(fnmatch(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗螝,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ))
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䭼(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ="[^abc]"
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷=["^","a","b","c"]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤=["d","e","f","g"]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𢌶(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𨂕(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ="[!ab]"
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷=["c","d"]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤=["a","b"]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𢌶(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗娐(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ="[]ab]"
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷=["]","a","b"]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤=["[]ab]","ab]"]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𢌶(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗잰(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ="a[]b"
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷=["a[]b"]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤=["a","b","[","]","ab"]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𢌶(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗骻(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join("~","a","b")
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷=[𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.expanduser(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join("~","a","b"))]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤=[𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join("~","a","b")]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𢌶(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ޢ(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ="(a|b)"
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷=["a","b"]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤=["(a|b)","a|b"]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𢌶(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𨲹(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ="(a|[b)]"
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷=["(a|b","(a|)"]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤=["a]","[b]"]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𢌶(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ܗ(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ="a?b"
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷=["axb","ayb"]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤=["ab","aXXb"]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𢌶(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﲗ(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ="a*b"
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷=["axb","ayb"]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤=["aXbX",𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join("a","b")]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𢌶(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ど(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ="a**b"
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷=["axb","ayb",𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join("a","b")]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤=["aXbX"]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𢌶(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𤉷,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧩤)
class 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𠰮(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𡙂):
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ኡ(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.maxDiff=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﭐ
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗鯋(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𢸊=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ꦥ([𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.normcase(g)for g in glob(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ)])
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ꦥ([𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.normcase(f)for f in 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃])
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.assertEqual(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𢸊,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗爗(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.glob_test_dir,'Sub*','File1?.py')
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=[𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file11,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file12]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗鯋(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𩋇(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.glob_test_dir,'Sub*'+𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﯕ)
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=[𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.dir1+𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﯕ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.dir2+𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﯕ]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗鯋(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗鬡(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.dir1+𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﯕ)
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=[𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.dir1+𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﯕ]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗鯋(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𢁄(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.glob_test_dir,'*')
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=[𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.dir1,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.dir2,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file1,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file2,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file3]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗鯋(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𧉏(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.glob_test_dir,'**','*')
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=[𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.dir1,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.dir2,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file1,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file2,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file3,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file11,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file12,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file_paren,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file_brack]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗鯋(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗蠮(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.glob_test_dir
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=[𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.glob_test_dir]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗鯋(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𦯤(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ=''
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=[]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗鯋(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ޕ(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file12)
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=[𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file12]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗鯋(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗憸(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.glob_test_dir,'SubDir[12]','File[(]with)parentheses.txt')
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=[𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file_paren]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗鯋(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗察(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.glob_test_dir,'SubDir[12]','File[[]with[]]brackets.txt')
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=[𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file_brack]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗鯋(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𞸗(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.glob_test_dir,"File?.(x|y|z)")
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=[𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file1,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file2,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file3]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗鯋(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗有(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.glob_test_dir,"SubDir?","File11.py")
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=[𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file11]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗鯋(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ؽ(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.glob_test_dir,"**","*")
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=[𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file1,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file2,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file3,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file11,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file12,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file_paren,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file_brack,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.dir1,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.dir2]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗鯋(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗杒(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ="NOPE"
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=[]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗鯋(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃)
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗뉙(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ى=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𪎾
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𪎾=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.glob_test_dir
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ='**'
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=[𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file1,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file2,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file3,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file11,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file12,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file_paren,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.file_brack,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.dir1,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.dir2]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𢸊=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ꦥ([𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.normcase(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𪎾,g))for g in glob(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ)])
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ꦥ([𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.normcase(f)for f in 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃])
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.assertEqual(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𢸊,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃)
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𪎾=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ى
 def 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ݜ(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ):
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ى=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𪎾
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𪎾=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.glob_test_dir
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ='*Dir?'
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=[𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.dir1,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𖽂.dir2]
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𢸊=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ꦥ([𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.normcase(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.join(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𪎾,g))for g in glob(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰹ)])
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ꦥ([𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𫎃.normcase(f)for f in 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃])
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ﰛ.assertEqual(𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𢸊,𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗䚃)
  𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗𪎾=𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ى
if __name__=='__main__':
 𤺮𞺍ﵟ𞺐𤡂ﴪ𧊛𖣍塗ᛇ(verbosity=2)
