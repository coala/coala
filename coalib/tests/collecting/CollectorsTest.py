import inspect
ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﻃ=TypeError
ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﺨ=sorted
ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𪲚=len
ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𞺮=inspect.getfile
ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𞹩=inspect.currentframe
import os
ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇=os.path
ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ鷑=os.sep
import sys
ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𐨦=sys.path
import unittest
ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𠝺=unittest.main
ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ軒=unittest.TestCase
ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𐨦.insert(0,".")
from coalib.output.printers.ConsolePrinter import ConsolePrinter
from coalib.collecting.Collectors import collect_files, collect_dirs, collect_bears
class ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𒄙(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ軒):
 def ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ䓶(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏):
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﳫ=ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.split(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𞺮(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𞹩()))[0]
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.collectors_test_dir=ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.join(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﳫ,"collectors_test_dir")
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.log_printer=ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﻃ()
 def ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𐭊(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏):
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.assertRaises(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﻃ,collect_files)
 def ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𐰐(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏):
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.assertEqual(collect_files(["invalid_path"]),[])
 def ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𐰰(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏):
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.assertEqual(collect_files([ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.join(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.collectors_test_dir,"others","*","*2.py")]),[ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.normcase(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.join(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.collectors_test_dir,"others","py_files","file2.py"))])
class ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉݣ(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ軒):
 def ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ䓶(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏):
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﳫ=ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.split(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𞺮(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𞹩()))[0]
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.collectors_test_dir=ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.join(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﳫ,"collectors_test_dir")
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.log_printer=ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﻃ()
 def ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𐩳(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏):
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.assertRaises(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﻃ,collect_dirs)
 def ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉⴔ(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏):
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.assertEqual(collect_dirs(["invalid_path"]),[])
 def ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﴜ(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏):
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.assertEqual(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﺨ(collect_dirs([ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.join(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.collectors_test_dir,"**")])),ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﺨ([ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.normcase(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.join(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.collectors_test_dir,"bears")),ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.normcase(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.join(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.collectors_test_dir,"bears","__pycache__")),ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.normcase(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.join(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.collectors_test_dir,"others")),ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.normcase(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.join(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.collectors_test_dir,"others","c_files")),ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.normcase(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.join(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.collectors_test_dir,"others","py_files")),ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.normcase(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.collectors_test_dir+ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ鷑)]))
class ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﲊ(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ軒):
 def ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ䓶(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏):
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﳫ=ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.split(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𞺮(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𞹩()))[0]
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.collectors_test_dir=ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.join(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﳫ,"collectors_test_dir")
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.log_printer=ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﻃ()
 def ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ䜨(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏):
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.assertRaises(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﻃ,collect_bears)
 def ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𩨴(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏):
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.assertEqual(collect_bears(["invalid_paths"],["invalid_name"],["invalid kind"],ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.log_printer),[])
 def ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𐩣(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏):
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.assertEqual(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𪲚(collect_bears([ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.join(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.collectors_test_dir,"bears")],["bear1"],["kind"],ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.log_printer)),1)
 def ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𢴥(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏):
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.assertEqual(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𪲚(collect_bears([ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.join(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.collectors_test_dir,"bears")],["metabear"],["kind"],ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.log_printer)),1)
 def ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𐩠(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏):
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.assertEqual(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𪲚(collect_bears([ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.join(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.collectors_test_dir,"bears","**")],["*"],["kind"],ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.log_printer)),2)
 def ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉﱓ(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏):
  ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.assertEqual(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𪲚(collect_bears([ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𡟇.join(ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.collectors_test_dir,"bears","**")],["*"],["other_kind"],ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𤰏.log_printer)),0)
if __name__=='__main__':
 ﳡ𦨃𐦚𐡈𫞻ڙࡀ𪔩ﲦ𝔼ﰁ𧀸瓄ቿﳍ迷𫟋ܖ𖣉𣁙𩒀𦖀𧭙ﭞ𧻯ڜﻀ𥑅ꢉ𠝺(verbosity=2)
# Created by pyminifier (https://github.com/liftoff/pyminifier)
