import os
ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𩋯=id
ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﮃ=any
ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﻗ=staticmethod
ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﺾ=range
ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﯢ=str
ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ڙ=property
ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𞹙=os.path
import dbus.service
from coalib.output.NullInteractor import NullInteractor
from coalib.output.printers.NullPrinter import NullPrinter
from coalib.settings.ConfigurationGathering import find_user_config
from coalib.settings.ConfigurationGathering import gather_configuration
from coalib.processes.Processing import execute_section
from coalib.parsing.Globbing import fnmatch
from coalib.settings.Setting import path_list
class ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𐤢(dbus.service.Object):
 ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﱂ="org.coala.v1"
 def __init__(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌,ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𩋯,ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆騁=""):
  dbus.service.Object.__init__(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌)
  ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌.config_file=""
  ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌.ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆騁=ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆騁
  ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌.ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𩋯=ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𩋯
 @dbus.service.method(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﱂ,in_signature="",out_signature="s")
 def ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𐨦(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌):
  if ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌.ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆騁=="":
   return ""
  ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌.config_file=ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𪲷(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌.ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆騁)
  return ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌.config_file
 @dbus.service.method(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﱂ,in_signature="s",out_signature="s")
 def ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𥈶(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌,ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﶵ):
  ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌.config_file=ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﶵ
  return ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌.config_file
 @dbus.service.method(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﱂ,in_signature="",out_signature="s")
 def ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆䨰(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌):
  return ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌.config_file
 @dbus.service.method(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﱂ,in_signature="",out_signature="a(sba(sssss))")
 def ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𥄮(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌):
  ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆컔=[]
  if ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌.ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆騁=="" or ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌.config_file=="":
   return ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆컔
  ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𐨳=["--config="+ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌.config_file]
  ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𞺉=NullPrinter()
  ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﶷ=NullInteractor(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𞺉)
  (ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆徐,ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ߨ,ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𪌙,ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𐦩)=gather_configuration(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﶷ.acquire_settings,ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𞺉,arg_list=ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𐨳)
  for ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𡥶 in ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆徐:
   ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𧹋=ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆徐[ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𡥶]
   if not ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𧹋.is_enabled(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𐦩):
    continue
   if ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﮃ([fnmatch(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌.ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆騁,file_pattern)for file_pattern in path_list(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𧹋["files"])]):
    ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𧹋["files"].value=ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌.ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆騁
    ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𨋴=execute_section(section=ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𧹋,global_bear_list=ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𪌙[ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𡥶],local_bear_list=ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ߨ[ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𡥶],print_results=ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﶷ.print_results,log_printer=ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𞺉)
    ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆컔.append(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𐤢.results_to_dbus_struct(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𨋴,ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𡥶))
  return ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆컔
 @ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﻗ
 def ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﮠ(section_result,ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𡥶):
  ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﮯ=[]
  for i in ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﺾ(1,3): 
   for ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𦼨,value in section_result[i].items():
    for ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𣊀 in value:
     ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﮯ.append([ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﯢ(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𣊀.origin),ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﯢ(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𣊀.message),ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﯢ(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𣊀.file),ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﯢ(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𣊀.line_nr),ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﯢ(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𣊀.severity)])
  return[ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𡥶,section_result[0],ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ﮯ]
 @ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆ڙ
 def ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆騁(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌):
  return ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌._path
 @ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆騁.setter
 def ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆騁(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌,ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𞸪):
  if ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𞸪:
   ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𞸪=ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𞹙.abspath(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𞹙.expanduser(ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𞸪))
  ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𒅌._path=ꋌ𐬜𩴔ݓ婶ﮧﴌ𐠋ݿ𐠞𦿃וֹﴫﭱ𐠘ٯﱗみܔ𣀝蠱𐦝ع𒀭ﯚ𐡀ﰑ禛앆𞸪
# Created by pyminifier (https://github.com/liftoff/pyminifier)
