import os
𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𢺜=len
𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𝝘=True
𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰿=False
𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ꗂ=None
𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𡇜=OSError
𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﳰ=list
𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𧓵=os.sep
𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ػ=os.path
𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﴉ=os.error
𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫嶏=os.listdir
𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𨟅=os.curdir
import platform
𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ۅ=platform.system
import re
𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐦪=re.escape
𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤕪=re.compile
𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫שׁ=re.finditer
from coalib.misc.Decorators import yield_once
def 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯛ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𠓤,start_index):
 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣣸=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𢺜(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𠓤)
 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤟀=start_index
 if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤟀<𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣣸 and 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𠓤[𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤟀]=='!':
  𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤟀+=1
 if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤟀<𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣣸: 
  𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤟀+=1
 while 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤟀<𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣣸 and 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𠓤[𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤟀]!=']':
  𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤟀+=1
 return 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤟀
def 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶚ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𠓤,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﲫ):
 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﲫ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𢺜(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𠓤[:𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﲫ])
 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܪ,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣣸=0,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𢺜(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𠓤)
 while 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܪ<𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﲫ:
  𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﵶ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𠓤[𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܪ]
  𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܪ+=1
  if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﵶ=='[':
   𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤟀=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯛ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𠓤,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܪ)
   if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤟀<𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣣸:
    if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܪ<=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﲫ<𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤟀:
     return 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𝝘
    𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܪ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤟀+1
   else:
    return 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰿
 return 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰿
def 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﳟ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ):
 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﰂ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ꗂ
 for 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶌ in 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫שׁ('\\)',𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ):
  if not 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶚ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶌ.start()):
   𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﰂ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶌ.start()
   break 
 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﱨ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ꗂ
 for 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶌ in 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫שׁ('\\(',𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ[:𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﰂ]):
  if not 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶚ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶌ.start()):
   𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﱨ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶌ.end()
 return 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﱨ,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﰂ
@yield_once
def 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𡵉(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ):
 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﱨ=0
 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐠖=[𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶌ.start()for 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶌ in 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫שׁ('\\|',𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ)]
 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐠖.append(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𢺜(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ))
 for 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﰂ in 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐠖:
  if not 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶚ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﰂ):
   yield 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ[𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﱨ:𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﰂ]
   𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﱨ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﰂ+1
@yield_once
def 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐊠(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ):
 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﱨ,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﰂ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﳟ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ)
 if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ꗂ in(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﱨ,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﰂ):
  yield 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ
 else:
  for 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫蚌 in 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𡵉(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ[𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﱨ:𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﰂ]):
   𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ᝋ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ[:𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﱨ-1]+𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫蚌+𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ[𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﰂ+1:]
   for 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ףּ in 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐊠(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ᝋ):
    yield 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ףּ
def 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𡪇(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ):
 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܪ,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣣸=0,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𢺜(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ)
 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﲫ=''
 while 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܪ<𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣣸:
  𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﵶ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ[𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܪ]
  𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܪ+=1
  if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﵶ=='*':
   if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܪ<𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣣸 and 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ[𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܪ]=='*':
    𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﲫ+='.*'
   elif 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ۅ()=='Windows': 
    𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﲫ+='[^/\\\\]*'
   else:
    𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﲫ+='[^'+𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐦪(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𧓵)+']*'
  elif 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﵶ=='?':
   𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﲫ+='.'
  elif 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﵶ=='[':
   𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤟀=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯛ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܪ)
   if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤟀>=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣣸:
    𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﲫ+='\\['
   else:
    𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫㟫=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ[𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܪ:𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤟀].replace('\\','\\\\')
    𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܪ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤟀+1
    if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫㟫[0]=='!':
     𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫㟫='^'+𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫㟫[1:]
    elif 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫㟫[0]=='^':
     𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫㟫='\\'+𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫㟫
    𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﲫ+='['+𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫㟫+']'
  else:
   𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﲫ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﲫ+𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐦪(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﵶ)
 return 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﲫ+'\\Z(?ms)'
def 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶷ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯟ,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ):
 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯟ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ػ.normcase(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯟ)
 for 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸚 in 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐊠(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ):
  𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸚=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ػ.expanduser(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸚)
  𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸚=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ػ.normcase(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸚)
  𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶌ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤕪(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𡪇(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸚)).match
  if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶌ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯟ)is not 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ꗂ:
   return 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𝝘
 return 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰿
def 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐦡(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ):
 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸔=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ػ.split(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ)
 if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸔:
  if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ػ.exists(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ):
   yield 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ
 else:
  if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ػ.isdir(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓):
   yield 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ
 return
def 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣐐(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓):
 if not 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓:
  𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𨟅
 try:
  𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐬪=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫嶏(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓)
 except 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﴉ:
  return
 for 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﴍ in 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐬪:
  yield 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﴍ
  𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫שּׂ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ػ.join(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﴍ)if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓 else 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﴍ
  for 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐨛 in 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣐐(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫שּׂ):
   yield 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ػ.join(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﴍ,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐨛)
def 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫쁏(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ):
 if not 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓:
  𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𨟅
 try:
  𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫뽈=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫嶏(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓)
 except 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𡇜:
  return[]
 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐬔=[]
 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ػ.normcase(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ)
 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶌ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤕪(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𡪇(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ)).match
 for 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯟ in 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫뽈:
  if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶌ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ػ.normcase(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯟ)):
   𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐬔.append(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯟ)
 return 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐬔
def 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫祅(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸔):
 if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ػ.exists(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ػ.join(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸔)):
  return[𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸔]
 return[]
def 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫썠(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ):
 assert 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ=='**'
 if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓:
  yield 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ[:0]
 for 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫䢊 in 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣐐(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓):
  yield 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫䢊
𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𩕧=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𤕪('([*?[])')
def 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܙ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ):
 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶌ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𩕧.search(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ)
 return 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﶌ is not 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ꗂ
def 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﺅ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ):
 for 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸚 in 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐊠(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ):
  𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸚=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ػ.expanduser(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸚)
  𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸚=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ػ.normcase(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸚)
  𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸔=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ػ.split(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸚)
  if not 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܙ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸚):
   for 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣔑 in 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐦡(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸚):
    yield 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣔑
   return
  if not 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓:
   if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸔=='**':
    for 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣔑 in 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫썠(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸔):
     yield 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣔑
   else:
    for 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣔑 in 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫쁏(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸔):
     yield 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𣔑
   return
  if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓!=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸚 and 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܙ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓):
   𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﴠ=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﺅ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓)
  else:
   𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﴠ=[𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓]
  if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ܙ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸔):
   if 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸔=='**':
    𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐤲=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫썠
   else:
    𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐤲=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫쁏
  else:
   𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐤲=𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫祅
  for 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓 in 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﴠ:
   for 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯟ in 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐤲(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𞸔):
    yield 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ػ.join(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𐰓,𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯟ)
def 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫𢊎(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ):
 return 𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﳰ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﺅ(𐡒ဿ𞸍𢳻𩲆𐠍ﻁﵟ𞹇𐠚𧨣ﵻ𐦔ܜﵴ𧴼Ꮤ𐡆𐠎ﭚڕﻦﳂ睋ﺐ𐠦𪠌𑚐𐤫ﯰ))
# Created by pyminifier (https://github.com/liftoff/pyminifier)
