image: Visual Studio 2015

environment:
  global:
    PIP_CACHE_DIR: C:\pip_cache
    PIP_DISABLE_PIP_VERSION_CHECK: 1
    # Needed if pip uninstall is used
    PIP_YES: 1
    YARN_GPG: 'no'
    FudgeCI: $(APPVEYOR_BUILD_FOLDER)\.misc
    NUGET_EXE_NO_PROMPT: 1
    NUGET_HTTP_CACHE_PATH: C:\nuget_http_cache
    CHOCO_CACHE_DIR: C:\choco_cache
    MSYS_ROOT: C:\msys64
    MSYS_BIN: $(MSYS_ROOT)\usr\bin
    MSSDK_ROOT: C:\Program Files\Microsoft SDKs
    VS_ROOT: C:\Program Files (x86)\Microsoft Visual Studio
    PATH: >-
      C:\python;C:\python\Scripts;$(PATH);$(MSYS_BIN);
      C:\tools\fudge\tools;
      $(APPVEYOR_BUILD_FOLDER)\node_modules\.bin;

  matrix:
    - PYTHON_VERSION: 3.6
    - PYTHON_VERSION: 3.5
    - PYTHON_VERSION: 3.4

platform:
  - x86
  - x64

cache:
  - C:\nuget_http_cache
  - C:\choco_cache
  - "C:\\pip_cache"
  - "node_modules"
  - "C:\\Users\\appveyor\\AppData\\Local\\coala-bears\\coala-bears"
  - "C:\\Users\\appveyor\\AppData\\Roaming\\nltk_data"

branches:
  except:
    - /^sils\/.*/

# This forces unix style line endings in the clone, which is necessary to
# avoid warning regarding EOLs when running git diff on Windows
init: git config --global core.autocrlf false

install:
  # Show initial state
  - powershell -c "$PSVersionTable"
  # Uncomment to debug
  # printenv
  - python --version
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - python -m pip --version
  - python -c "import setuptools; print(setuptools.__version__)"
  - node --version
  - which npm
  - npm --version
  - npm config get prefix
  - which gcc & exit 0
  - gcc --version & exit 0
  - which cl & exit 0

  # Stores environment in registry, with minor tweaks
  - python .misc/store_env_in_registry.py
  - refreshenv

  # Set up AppVeyor product versions, and install dummy choco entries for them
  - ps: . .misc/FudgeCI.ps1; Initialize-AppVeyorVM
  - refreshenv
  - echo %PATH%
  # Avoid tools finding and using MinGW
  - mv C:\MinGW %TEMP%
  # TODO: Avoid tools finding and using Visual Studio

  # Show updated SOE; versions should be as defined in top of the Fudgefile
  - python --version
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - node --version
  - which npm
  - npm --version
  - npm config get prefix
  - which gcc & exit 0
  - gcc --version & exit 0

  - "%MSYS_BIN%\\date.exe"
  # Install remainer of the Fudgefile with chocolatey using Fudge
  - ps: . .misc/Fudge.ps1 install
  - refreshenv
  - echo %PATH%


  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  # Confirm other versions
  - node --version
  - which npm
  - npm --version
  - npm config get prefix
  # Newly installed versions


  - "%MSYS_BIN%\\date.exe"

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  - python -m pip --version
  - python -c "import setuptools; print(setuptools.__version__)"

  - py.test

  - python setup.py install

  - python -m pip install
      git+https://github.com/coala/coala-bears#egg=coala-bears
  - npm install csslint -g
  # https://github.com/coala/coala/issues/5619
  - rm docs/Developers/coala_settings.rst
  # https://github.com/coala/coala/issues/5985 and
  # https://github.com/coala/coala/issues/6028 and others:
  - rm coalib/misc/Asyncio.py


  - coala --ci

on_success:
  - codecov

on_failure:
  - codecov

matrix:
  fast_finish: true
